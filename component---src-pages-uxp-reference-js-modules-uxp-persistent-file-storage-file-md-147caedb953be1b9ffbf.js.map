{"version":3,"sources":["webpack:///./src/pages/uxp/reference-js/Modules/uxp/Persistent File Storage/File.md"],"names":["name","_frontmatter","JsDocParameters","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-uxp-reference-js-modules-uxp-persistent-file-storage-file-md-147caedb953be1b9ffbf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp/uxp/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst JsDocParameters = makeShortcode(\"JsDocParameters\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"module-storage-file\" id=\"module-storage-file\"></a>\n    <h1 {...{\n      \"id\": \"requireuxpstoragefile\"\n    }}>{`require('uxp').storage.File`}</h1>\n    <p>{`Represents a file on a file system. Provides methods for reading from and\nwriting to the file. You'll never instantiate a `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` directly; instead\nyou'll get access via a `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Persistent%20File%20Storage/FileSystemProvider/\"\n      }}>{`storage.FileSystemProvider`}</a>{`.`}</p>\n    <JsDocParameters mdxType=\"JsDocParameters\" />\n    <a name=\"module-storage-file-isfile\" id=\"module-storage-file-isfile\"></a>\n    <h2 {...{\n      \"id\": \"isfile\"\n    }}>{`isFile`}</h2>\n    <p>{`Indicates that this instance is a file.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (anEntry.isFile) {\n    await anEntry.read();\n}\n`}</code></pre>\n    <a name=\"module-storage-file-mode\" id=\"module-storage-file-mode\"></a>\n    <h2 {...{\n      \"id\": \"mode--symbol\"\n    }}>{`mode : `}<inlineCode parentName=\"h2\">{`Symbol`}</inlineCode></h2>\n    <p>{`Indicates whether this file is read-only or read-write. See `}<a parentName=\"p\" {...{\n        \"href\": \"readOnly\"\n      }}>{`readOnly`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"readWrite\"\n      }}>{`readWrite`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (aFile.mode === modes.readOnly) {\n    throw new Error(\"Can't write to a file opened as read-only.\");\n}\n`}</code></pre>\n    <a name=\"module-storage-file-read\" id=\"module-storage-file-read\"></a>\n    <h2 {...{\n      \"id\": \"readoptions\"\n    }}>{`read(options)`}</h2>\n    <p>{`Reads data from the file and returns it. The file format can be specified\nwith the `}<inlineCode parentName=\"p\">{`format`}</inlineCode>{` option. If a format is not supplied, the file is assumed\nto be a text file using UTF8 encoding.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`Promise.<(string\\\\|ArrayBuffer)>`}</inlineCode>{` - the contents of the file  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.format]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`formats.utf8`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The format of the file; see `}<a parentName=\"td\" {...{\n              \"href\": \"utf8\"\n            }}>{`utf8`}</a>{` and `}<a parentName=\"td\" {...{\n              \"href\": \"binary\"\n            }}>{`binary`}</a>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const text = await myNovel.read();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const data = await myNovel.read({format: formats.binary});\n`}</code></pre>\n    <a name=\"module-storage-file-write\" id=\"module-storage-file-write\"></a>\n    <h2 {...{\n      \"id\": \"writedata-options\"\n    }}>{`write(data, options)`}</h2>\n    <p>{`Writes data to a file, appending if desired. The format of the file\nis controlled via the `}<inlineCode parentName=\"p\">{`format`}</inlineCode>{` option, and defaults to UTF8.`}</p>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`FileIsReadOnly`}</inlineCode>{` if writing to a read-only file`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`OutOfSpace`}</inlineCode>{` If writing to the file causes the file system to exceed the available space (or quota)`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`ArrayBuffer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the data to write to the file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.format]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`formats.utf8`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the format of the file; see `}<a parentName=\"td\" {...{\n              \"href\": \"utf8\"\n            }}>{`utf8`}</a>{` and `}<a parentName=\"td\" {...{\n              \"href\": \"binary\"\n            }}>{`binary`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.append]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the data is written to the end of the file`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await myNovel.write(\"It was a dark and stormy night.\\\\n\");\nawait myNovel.write(\"Cliches and tropes aside, it really was.\", {append: true});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const data = new ArrayBuffer();\nawait aDataFile.write(data, {format: formats.binary});\n`}</code></pre>\n    <a name=\"module-storage-file-isfile\" id=\"module-storage-file-isfile\"></a>\n    <h2 {...{\n      \"id\": \"isfileentry\"\n    }}>{`isFile(entry)`}</h2>\n    <p>{`Determines if the entry is a file or not. This is safe to use even if the\nentry is `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{` - if `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, the entry is a file.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the entry to check`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}