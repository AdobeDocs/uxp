(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{KfJP:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return c}));var o=n("wx14"),a=n("zLVn"),m=(n("q1tI"),n("7ljp")),r=n("LHWr"),d=(n("qKvR"),{}),i={_frontmatter:d},s=r.a;function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(m.mdx)(s,Object(o.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)("a",{name:"module-storage-formats",id:"module-storage-formats"}),Object(m.mdx)("h2",{id:"formats"},"formats"),Object(m.mdx)("p",null,"This namespace describes the file content formats supported in FS methods like read and write."),Object(m.mdx)("a",{name:"module-storage-formats-utf8",id:"module-storage-formats-utf8"}),Object(m.mdx)("h3",{id:"utf8--symbol"},"utf8 : ",Object(m.mdx)("inlineCode",{parentName:"h3"},"Symbol")),Object(m.mdx)("p",null,"UTF8 File encoding"),Object(m.mdx)("a",{name:"module-storage-formats-binary",id:"module-storage-formats-binary"}),Object(m.mdx)("h3",{id:"binary--symbol"},"binary : ",Object(m.mdx)("inlineCode",{parentName:"h3"},"Symbol")),Object(m.mdx)("p",null,"Binary file encoding"))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-js-uxp-storage-formats-md-425298def25316478f12.js.map