{"version":3,"sources":["webpack:///./src/pages/uxp/reference-js/Modules/uxp/Persistent File Storage/Entry.md"],"names":["name","_frontmatter","JsDocParameters","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-uxp-reference-js-modules-uxp-persistent-file-storage-entry-md-8cede5e994d4faf9f099.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp/uxp/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst JsDocParameters = makeShortcode(\"JsDocParameters\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"module-storage-entry\" id=\"module-storage-entry\"></a>\n    <h1 {...{\n      \"id\": \"requireuxpstorageentry\"\n    }}>{`require('uxp').storage.Entry`}</h1>\n    <p>{`An `}<inlineCode parentName=\"p\">{`Entry`}</inlineCode>{` is the base class for `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{`. You'll\ntypically never instantiate an `}<inlineCode parentName=\"p\">{`Entry`}</inlineCode>{` directly, but it provides\nthe common fields and methods that both `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{`\nshare.`}</p>\n    <JsDocParameters mdxType=\"JsDocParameters\" />\n    <a name=\"new-module-storage-entry-new\" id=\"new-module-storage-entry-new\"></a>\n    <h2 {...{\n      \"id\": \"entryname-provider-id\"\n    }}>{`Entry(name, provider, id)`}</h2>\n    <p>{`Creates an instance of Entry.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`provider`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-storage-entry-isentry\" id=\"module-storage-entry-isentry\"></a>\n    <h2 {...{\n      \"id\": \"isentry--boolean\"\n    }}>{`isEntry : `}<inlineCode parentName=\"h2\">{`boolean`}</inlineCode></h2>\n    <p>{`Indicates that this instance is an `}<inlineCode parentName=\"p\">{`Entry`}</inlineCode>{`. Useful for type-checking.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (something.isEntry) {\n    return something.getMetadata();\n}\n`}</code></pre>\n    <a name=\"module-storage-entry-isfile\" id=\"module-storage-entry-isfile\"></a>\n    <h2 {...{\n      \"id\": \"isfile--boolean\"\n    }}>{`isFile : `}<inlineCode parentName=\"h2\">{`boolean`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nIndicates that this instance is `}<strong parentName=\"p\">{`not`}</strong>{` a `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{`. Useful for type-\nchecking.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (!anEntry.isFile) {\n    return \"This entry is not a file.\";\n}\n`}</code></pre>\n    <a name=\"module-storage-entry-isfolder\" id=\"module-storage-entry-isfolder\"></a>\n    <h2 {...{\n      \"id\": \"isfolder--boolean\"\n    }}>{`isFolder : `}<inlineCode parentName=\"h2\">{`boolean`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nIndicates that this instance is `}<strong parentName=\"p\">{`not`}</strong>{` a folder. Useful for type-\nchecking.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (!anEntry.isFolder) {\n    return \"This entry is not a folder.\";\n}\n`}</code></pre>\n    <a name=\"module-storage-entry-name\" id=\"module-storage-entry-name\"></a>\n    <h2 {...{\n      \"id\": \"name--string\"\n    }}>{`name : `}<inlineCode parentName=\"h2\">{`string`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nThe name of this entry. Read-only.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`console.log(anEntry.name);\n`}</code></pre>\n    <a name=\"module-storage-entry-provider\" id=\"module-storage-entry-provider\"></a>\n    <h2 {...{\n      \"id\": \"provider--filesystemprovider\"\n    }}>{`provider : `}<inlineCode parentName=\"h2\">{`FileSystemProvider`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nThe associated provider that services this entry. Read-only.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (entryOne.provider !== entryTwo.provider) {\n    throw new Error(\"Providers are not the same\");\n}\n`}</code></pre>\n    <a name=\"module-storage-entry-url\" id=\"module-storage-entry-url\"></a>\n    <h2 {...{\n      \"id\": \"url--string\"\n    }}>{`url : `}<inlineCode parentName=\"h2\">{`string`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nThe url of this entry. You can use this url as input to other entities of the extension system like for eg: set as src attribute of a Image widget in UI. Read-only.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`console.log(anEntry.url);\n`}</code></pre>\n    <a name=\"module-storage-entry-nativepath\" id=\"module-storage-entry-nativepath\"></a>\n    <h2 {...{\n      \"id\": \"nativepath--string\"\n    }}>{`nativePath : `}<inlineCode parentName=\"h2\">{`string`}</inlineCode></h2>\n    <p><strong parentName=\"p\">{`Read only`}</strong>{`\nThe platform native file-system path of this entry. Read-only`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`console.log(anEntry.nativePath);\n`}</code></pre>\n    <a name=\"module-storage-entry-tostring\" id=\"module-storage-entry-tostring\"></a>\n    <h2 {...{\n      \"id\": \"tostring\"\n    }}>{`toString()`}</h2>\n    <p>{`returns the details of the given entry like name, type and native path in a readable string format.`}</p>\n    <a name=\"module-storage-entry-copyto\" id=\"module-storage-entry-copyto\"></a>\n    <h2 {...{\n      \"id\": \"copytofolder-options\"\n    }}>{`copyTo(folder, options)`}</h2>\n    <p>{`Copies this entry to the specified `}<inlineCode parentName=\"p\">{`folder`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`EntryExists`}</inlineCode>{` if the attempt would overwrite an entry and `}<inlineCode parentName=\"li\">{`overwrite`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`PermissionDenied`}</inlineCode>{` if the underlying file system rejects the attempt`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`OutOfSpace`}</inlineCode>{` if the file system is out of storage space`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`folder`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Folder`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the folder to which to copy this entry`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.overwrite]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, allows overwriting existing entries`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.copyTo(someFolder);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.copyTo(someFolder, {overwrite: true});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFolder.copyTo(anotherFolder, {overwrite: true});\n`}</code></pre>\n    <a name=\"module-storage-entry-moveto\" id=\"module-storage-entry-moveto\"></a>\n    <h2 {...{\n      \"id\": \"movetofolder-options\"\n    }}>{`moveTo(folder, options)`}</h2>\n    <p>{`Moves this entry to the target folder, optionally specifying a new name.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`folder`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Folder`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the folder to which to move this entry`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.overwrite]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` allows the move to overwrite existing files`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.newName]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If specified, the entry is renamed to this name`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.moveTo(someFolder);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.moveTo(someFolder, {overwrite: true});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFolder.moveTo(anotherFolder, {overwrite: true});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.moveTo(someFolder, {newName: 'masterpiece.txt'})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await someFile.moveTo(someFolder, {newName: 'novel.txt', {overwrite: true})\n`}</code></pre>\n    <a name=\"module-storage-entry-delete\" id=\"module-storage-entry-delete\"></a>\n    <h2 {...{\n      \"id\": \"delete\"\n    }}>{`delete()`}</h2>\n    <p>{`Removes this entry from the file system. If the entry is a folder, all the\ncontents will also be removed.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await aFile.delete();\n`}</code></pre>\n    <a name=\"module-storage-entry-getmetadata\" id=\"module-storage-entry-getmetadata\"></a>\n    <h2 {...{\n      \"id\": \"getmetadata\"\n    }}>{`getMetadata()`}</h2>\n    <p>{`Returns this entry's metadata.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`Promise.<EntryMetadata>`}</inlineCode><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const metadata = aFile.getMetadata();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}