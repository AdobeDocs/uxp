{"version":3,"sources":["webpack:///./src/pages/reference-js/Modules/uxp/Persistent File Storage/Classes/FileSystemProvider.md"],"names":["name","_frontmatter","JsDocParameters","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-reference-js-modules-uxp-persistent-file-storage-classes-file-system-provider-md-6e6e19a9d0b569cb9daf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp/uxp/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst JsDocParameters = makeShortcode(\"JsDocParameters\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"module-storage-filesystemprovider\" id=\"module-storage-filesystemprovider\"></a>\n    <h1 {...{\n      \"id\": \"requireuxpstoragefilesystemprovider\"\n    }}>{`require('uxp').storage.FileSystemProvider`}</h1>\n    <p>{`Provides access to files and folders on a file system. You'll never\ninstantiate this directly; instead you'll use an instance of one that has\nalready been created for you by UXP.`}</p>\n    <JsDocParameters mdxType=\"JsDocParameters\" />\n    <a name=\"module-storage-filesystemprovider-isfilesystemprovider\" id=\"module-storage-filesystemprovider-isfilesystemprovider\"></a>\n    <h2 {...{\n      \"id\": \"isfilesystemprovider\"\n    }}>{`isFileSystemProvider`}</h2>\n    <p>{`Indicates that this is a `}<inlineCode parentName=\"p\">{`FileSystemProvider`}</inlineCode>{`. Useful for type-checking.`}</p>\n    <a name=\"module-storage-filesystemprovider-supporteddomains\" id=\"module-storage-filesystemprovider-supporteddomains\"></a>\n    <h2 {...{\n      \"id\": \"supporteddomains\"\n    }}>{`supportedDomains`}</h2>\n    <p>{`An array of the domains this file system supports. If the file system can\nopen a file picker to the user's `}<inlineCode parentName=\"p\">{`documents`}</inlineCode>{` folder, for example, then\n`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp/reference-js/Modules/uxp/Persistent%20File%20Storage/Enums/domains/#module-storage-domains-userdocuments\"\n      }}>{`userDocuments`}</a>{` will be in this list.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (fs.supportedDomains.contains(domains.userDocuments)) {\n    console.log(\"We can open a picker to the user's documents.\")\n}\n`}</code></pre>\n    <a name=\"module-storage-filesystemprovider-getfileforopening\" id=\"module-storage-filesystemprovider-getfileforopening\"></a>\n    <h2 {...{\n      \"id\": \"getfileforopeningoptions\"\n    }}>{`getFileForOpening(options)`}</h2>\n    <p>{`Gets a file (or files) from the file system provider for the purpose of\nopening them. Files are read-only.`}</p>\n    <p>{`Multiple files can be returned if the `}<inlineCode parentName=\"p\">{`allowMultiple`}</inlineCode>{` option`}<inlineCode parentName=\"p\">{`is`}</inlineCode>{`true\\`.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`Array.<File>`}</inlineCode>{` - based on allowMultiple is true or false, or empty if no file were selected.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.initialDomain]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the preferred initial location of the file picker. If not defined, the most recently used domain from a file picker is used instead.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.types]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array.<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[&#x27;.*&#x27;]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`array of file types that the file open picker displays.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.initialLocation]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`File`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`Folder`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the initial location of the file picker. You can pass an existing file or folder entry to suggest the picker to start at this location. If this is a file entry then the method will pick its parent folder as initial location. This will override initialDomain option.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.allowMultiple]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if true, multiple files can be returned (as an array)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const folder = await fs.getFolder({initialDomain = domains.userDocuments});\nconst file = await fs.getFileForOpening({initialLocation = folder});\nif (!file) {\n    // no file selected\n    return;\n}\nconst text = await file.read();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const files = await fs.getFileForOpening({allowMultiple: true, types: fileTypes.images});\nif (files.length === 0) {\n    // no files selected\n}\n`}</code></pre>\n    <a name=\"module-storage-filesystemprovider-getfileforsaving\" id=\"module-storage-filesystemprovider-getfileforsaving\"></a>\n    <h2 {...{\n      \"id\": \"getfileforsavingoptions\"\n    }}>{`getFileForSaving(options)`}</h2>\n    <p>{`Gets a file reference suitable for saving. The file is read-write. Any\nfile picker displayed will be of the \"save\" variety.`}</p>\n    <p>{`If the user attempts to save a file that doesn't exist, the file is\ncreated automatically.`}</p>\n    <p>{`If the act of writing to the file would overwrite it, the file picker\nshould prompt the user if they are OK with that action. If not, the file\nshould not be returned.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` - returns the selected file, or `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if no file were selected.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.initialDomain]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the preferred initial location of the file picker. If not defined, the most recently used domain from a file picker is used instead.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.types]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array.<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`array of valid file types that the user can choose to assign to a file.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const [file] = await fs.getFileForSaving({ types = [ \"txt\" ]});\nif (!file) {\n    // no file selected, or the user didn't want to overwrite one they did select\n    return;\n}\nawait file.write(\"It was a dark and stormy night\");\n`}</code></pre>\n    <a name=\"module-storage-filesystemprovider-getfolder\" id=\"module-storage-filesystemprovider-getfolder\"></a>\n    <h2 {...{\n      \"id\": \"getfolderoptions\"\n    }}>{`getFolder(options)`}</h2>\n    <p>{`Gets a folder from the file system via a folder picker dialog. The files\nand folders within can be accessed via `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp/reference-js/Modules/uxp/Persistent%20File%20Storage/Classes/Folder/#module-storage-folder-getentries\"\n      }}>{`Folder#getEntries`}</a>{`. Any\nfiles within are read-write.`}</p>\n    <p>{`If the user dismisses the picker, `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` is returned instead.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{` - the selected folder or `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if no folder is selected.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.initialDomain]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the preferred initial location of the file picker. If not defined, the most recently used domain from a file picker is used instead.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const folder = await fs.getFolder();\nconst myNovel = (await fs.getEntries()).filter(entry => entry.name.indexOf('novel') > 0);\nconst text = await myNovel.read();\n`}</code></pre>\n    <a name=\"module-storage-filesystemprovider-gettemporaryfolder\" id=\"module-storage-filesystemprovider-gettemporaryfolder\"></a>\n    <h2 {...{\n      \"id\": \"gettemporaryfolder\"\n    }}>{`getTemporaryFolder()`}</h2>\n    <p>{`Returns a temporary folder. The contents of the folder will be removed when\nthe extension is disposed.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const temp = await fs.getTemporaryFolder();\n`}</code></pre>\n    <a name=\"module-storage-filesystemprovider-getdatafolder\" id=\"module-storage-filesystemprovider-getdatafolder\"></a>\n    <h2 {...{\n      \"id\": \"getdatafolder\"\n    }}>{`getDataFolder()`}</h2>\n    <p>{`Returns a folder that can be used for extension's data storage without user interaction.\nIt is persistent across host-app version upgrades.`}</p>\n    <a name=\"module-storage-filesystemprovider-getpluginfolder\" id=\"module-storage-filesystemprovider-getpluginfolder\"></a>\n    <h2 {...{\n      \"id\": \"getpluginfolder\"\n    }}>{`getPluginFolder()`}</h2>\n    <p>{`Returns an plugin's folder – this folder and everything within it are read only.\nThis contains all the Plugin related packaged assets.`}</p>\n    <a name=\"module-storage-filesystemprovider-getfsurl\" id=\"module-storage-filesystemprovider-getfsurl\"></a>\n    <h2 {...{\n      \"id\": \"getfsurl\"\n    }}>{`getFsUrl()`}</h2>\n    <p>{`Returns the fs url of given entry.`}</p>\n    <a name=\"module-storage-filesystemprovider-getnativepath\" id=\"module-storage-filesystemprovider-getnativepath\"></a>\n    <h2 {...{\n      \"id\": \"getnativepath\"\n    }}>{`getNativePath()`}</h2>\n    <p>{`Returns the platform native file system path of given entry.`}</p>\n    <a name=\"module-storage-filesystemprovider-isfilesystemprovider\" id=\"module-storage-filesystemprovider-isfilesystemprovider\"></a>\n    <h2 {...{\n      \"id\": \"isfilesystemproviderfs\"\n    }}>{`isFileSystemProvider(fs)`}</h2>\n    <p>{`Checks if the supplied object is a `}<inlineCode parentName=\"p\">{`FileSystemProvider`}</inlineCode>{`. It's safe to use even\nif the object is `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`. Useful for type checking.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{` - If `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, the object is a file system provider  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the object to check`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}