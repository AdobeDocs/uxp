{"version":3,"sources":["webpack:///./src/pages/uxp/reference-js/Modules/uxp/Entry Points/EntryPoints.md"],"names":["name","_frontmatter","JsDocParameters","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-uxp-reference-js-modules-uxp-entry-points-entry-points-md-9af2b26a5c2ab38e6ab6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp/uxp/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst JsDocParameters = makeShortcode(\"JsDocParameters\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"entrypoints\" id=\"entrypoints\"></a>\n    <h1 {...{\n      \"id\": \"requireuxpentrypoints\"\n    }}>{`require('uxp').entrypoints`}</h1>\n    <JsDocParameters mdxType=\"JsDocParameters\" />\n    <a name=\"entrypoints-setup\" id=\"entrypoints-setup\"></a>\n    <h2 {...{\n      \"id\": \"setupentrypoints\"\n    }}>{`setup(entrypoints)`}</h2>\n    <p>{`API for plugin to add handlers and menu items for entrypoints defined in manifest.\nThis API can only be called once and there after other apis can be used to modify menu items.\nThe function throws in case of any error in entrypoints data or if its called more than once.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describes your plugin's entrypoint functions and properties.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.plugin`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Object`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) This can be an object or a function. If this is a function, it is                                           assumed as the `}<inlineCode parentName=\"td\">{`create`}</inlineCode>{` handler (described below).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.plugin.create`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) This is called after plugin is loaded. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used to access                                         `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPluginInfo/#uxpplugininfo\"\n            }}>{`UxpPluginInfo`}</a>{` object. This function can return a promise. If `}<inlineCode parentName=\"td\">{`plugin`}</inlineCode>{`                                         object is defined, `}<inlineCode parentName=\"td\">{`create`}</inlineCode>{` must be defined.                                         To signal failure, you should throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.plugin.destroy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) This is called before plugin is unloaded. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used to access                                          `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPluginInfo/#uxpplugininfo\"\n            }}>{`UxpPluginInfo`}</a>{` object.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array.<(Object\\\\|function())>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This contains a list of key-value pairs where each key is a panel id (string) and                               value is the data for the panel whose type can be object/function.                               If a function, it is assumed to be the `}<inlineCode parentName=\"td\">{`show`}</inlineCode>{` method (described below).                               If an object, it can contain following properties but it must                               define either of `}<inlineCode parentName=\"td\">{`create`}</inlineCode>{` or 'show'.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].create`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) This is called when a panel is created. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used to access                                         `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPanelInfo/#uxppanelinfo\"\n            }}>{`UxpPanelInfo`}</a>{` object. This function can return a promise.                                         To signal failure, throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].show`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This is called when a panel is shown. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used to access                                         `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPanelInfo/#uxppanelinfo\"\n            }}>{`UxpPanelInfo`}</a>{` object. This function can return a promise.                                         To signal failure, throw an exception or return a rejected promise.                                         The callback function will be passed an object with a `}<inlineCode parentName=\"td\">{`node`}</inlineCode>{` field. You can attach your root UI node to this node using `}<inlineCode parentName=\"td\">{`node.appendChild(yourRoot)`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].hide`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This is called when a panel is hidden. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used to access                                       `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPanelInfo/#uxppanelinfo\"\n            }}>{`UxpPanelInfo`}</a>{` object. This function can return a promise.                                       To signal failure, throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].destroy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) This is called when a panel is going to be destroyed. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be                                          used to access `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPanelInfo/#uxppanelinfo\"\n            }}>{`UxpPanelInfo`}</a>{` object. This function can return a promise.                                          To signal failure, throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].invokeMenu`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This is called when a panel menu item is invoked.                                             The associated menu id is passed as the first argument to this function. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be                                             used to access `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpPanelInfo/#uxppanelinfo\"\n            }}>{`UxpPanelInfo`}</a>{` object. This function can return a promise.                                             To signal failure, throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`array of menu items. Each menu item can be a string or an object with                                         properties defined below. Menu items are displayed in the                                         same order as specified in this array. For specifying a separator,                                         a value of \"-\" can be used at required place in the array.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems.id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Identifier of the menu item. `}<strong parentName=\"td\">{`Must be unique across the entire plugin, including commands in the manifest.`}</strong></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems.label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Display text for the menu item. Should be localized. If label is not                                              specified, id is used as label.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems.enabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enabled/disabled state for the menu item. Default - true.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems.checked`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Checked state for the menu item. Default - false.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.panels[].menuItems.submenu`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Submenu for this menu item again as an array of 'menuItems'.                                               `}<inlineCode parentName=\"td\">{`id`}</inlineCode>{` of submenus should still be unique across panel.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.commands`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array.<Object>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This object contains a list of key-value pairs where each key is the command id and                                 value is command's data whose type can be an object or function.                                 If a function, it is assumed to be `}<inlineCode parentName=\"td\">{`run`}</inlineCode>{` method (described below).                                 If an object, it can contain following properties but `}<inlineCode parentName=\"td\">{`run`}</inlineCode>{` is required.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.commands[].run`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This is called when the command is invoked via menu entry. `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` can be used                                      to access `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp/uxp/reference-js/Modules/uxp/Entry%20Points/UxpCommandInfo/#uxpcommandinfo\"\n            }}>{`UxpCommandInfo`}</a>{` object. This function can return a promise.                                      To signal failure, throw an exception or return a rejected promise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entrypoints.commands[].cancel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Not in 4.1) Reserved for future use.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` const { entrypoints } = require(\"uxp\"); \n entrypoints.setup({\n      plugin: {\n         create() {..},\n         destroy() {..}\n     },\n     panels: {\n         \"panel1\": {\n             create() {..},\n             show() {..},\n             hide() {..},\n             destroy() {..},\n             invokeMenu() {..},\n             menuItems: [\n                 {\n                     id: \"signIn\",\n                     label: \"Sign In...\",\n                     enabled: false,\n                     checked: false\n                     submenu: [\n                         { id: \"submenu1\", label: \"submenu1\", enabled: false, checked: false},\n                         { \"submenu2\" }\n                     ]\n                 },\n                 \"-\",  // separator.\n                 \"Sign out\",  // by default enabled, and the id will be same with the label.\n             ]\n         },\n         \"panel2\": {..}\n     },\n     commands: {\n         \"command1\": {\n             run() {..},\n             cancel() {..}\n         },\n         \"command2\": function(){..}\n     }\n });\n`}</code></pre>\n    <a name=\"entrypoints-getpanel\" id=\"entrypoints-getpanel\"></a>\n    <h2 {...{\n      \"id\": \"getpanelid\"\n    }}>{`getPanel(id)`}</h2>\n    <p>{`Get panel with specified id`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`UxpPanelInfo`}</inlineCode>{` - - Information about the associated panel or `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if the panel with the requested `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` was not found.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`String`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panel id`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"entrypoints-getcommand\" id=\"entrypoints-getcommand\"></a>\n    <h2 {...{\n      \"id\": \"getcommandid\"\n    }}>{`getCommand(id)`}</h2>\n    <p>{`Get command with specified id`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`UxpCommandInfo`}</inlineCode>{` - - Information about the associated command or `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if the command with the requested `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` was not found.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`String`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`command id`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}