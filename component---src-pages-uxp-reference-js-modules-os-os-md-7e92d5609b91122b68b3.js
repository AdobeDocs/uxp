(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{MJyt:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return l}));var r,o=n("wx14"),a=n("zLVn"),s=(n("q1tI"),n("7ljp")),m=n("LHWr"),p=(n("qKvR"),{}),c=(r="JsDocParameters",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.mdx)("div",e)}),d={_frontmatter:p},i=m.a;function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.mdx)(i,Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(s.mdx)("a",{name:"os",id:"os"}),Object(s.mdx)("h1",{id:"requireos"},"require('os')"),Object(s.mdx)("p",null,"Class to give info about the operating system. To get an instance: ",Object(s.mdx)("inlineCode",{parentName:"p"},'require("os")'),"."),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"See"),": ",Object(s.mdx)("a",Object(o.a)({parentName:"p"},{href:"https://nodejs.org/api/os.html",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://nodejs.org/api/os.html"),"  "),Object(s.mdx)(c,{mdxType:"JsDocParameters"}),Object(s.mdx)("a",{name:"os-platform",id:"os-platform"}),Object(s.mdx)("h2",{id:"platform"},"platform()"),Object(s.mdx)("p",null,'Gets the platform we are running on (eg. "win10", "darwin")'),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(s.mdx)("inlineCode",{parentName:"p"},"string")," - the string representing the platform  "),Object(s.mdx)("a",{name:"os-release",id:"os-release"}),Object(s.mdx)("h2",{id:"release"},"release()"),Object(s.mdx)("p",null,'Gets the release number of the os (eg. "10.0.1.1032")'),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(s.mdx)("inlineCode",{parentName:"p"},"string")," - the string representing the release  "),Object(s.mdx)("a",{name:"os-arch",id:"os-arch"}),Object(s.mdx)("h2",{id:"arch"},"arch()"),Object(s.mdx)("p",null,'Gets the platform architecture we are running on (eg. "x32, x64, x86_64 etc")'),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(s.mdx)("inlineCode",{parentName:"p"},"string")," - the string representing the architecture  "))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-uxp-reference-js-modules-os-os-md-7e92d5609b91122b68b3.js.map