{"version":3,"sources":["webpack:///./src/pages/reference-js/uxp/storage/Non-instantiatable/Folder.md"],"names":["name","_frontmatter","JsDocParameters","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-reference-js-uxp-storage-non-instantiatable-folder-md-358c61baf6ea84991309.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp/uxp/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst JsDocParameters = makeShortcode(\"JsDocParameters\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"module-storage-folder\" id=\"module-storage-folder\"></a>\n    <h1 {...{\n      \"id\": \"folder\"\n    }}>{`Folder`}</h1>\n    <p>{`Represents a folder on a file system. You'll never instantiate this directly,\nbut will get it by calling `}<a parentName=\"p\" {...{\n        \"href\": \"FileSystemProvider#getTemporaryFolder\"\n      }}>{`FileSystemProvider#getTemporaryFolder`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"FileSystemProvider#getFolder\"\n      }}>{`FileSystemProvider#getFolder`}</a>{`, or via `}<a parentName=\"p\" {...{\n        \"href\": \"Folder#getEntries\"\n      }}>{`Folder#getEntries`}</a>{`.`}</p>\n    <JsDocParameters mdxType=\"JsDocParameters\" />\n    <a name=\"module-storage-folder-isfolder\" id=\"module-storage-folder-isfolder\"></a>\n    <h2 {...{\n      \"id\": \"isfolder\"\n    }}>{`isFolder`}</h2>\n    <p>{`Indicates that this instance is a folder. Useful for type checking.`}</p>\n    <a name=\"module-storage-folder-getentries\" id=\"module-storage-folder-getentries\"></a>\n    <h2 {...{\n      \"id\": \"getentries\"\n    }}>{`getEntries()`}</h2>\n    <p>{`Returns an array of entries contained within this folder.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`Array.<Entry>`}</inlineCode>{` - The entries within the folder.`}<br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const entries = await aFolder.getEntries();\nconst allFiles = entries.filter(entry => entry.isFile);\n`}</code></pre>\n    <a name=\"module-storage-folder-createentry\" id=\"module-storage-folder-createentry\"></a>\n    <h2 {...{\n      \"id\": \"createentryname-options\"\n    }}>{`createEntry(name, options)`}</h2>\n    <p>{`Creates an entry within this folder and returns the appropriate instance.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{` - the created entry  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the name of the entry to create`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.type]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Symbol`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`types.file`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Indicates which kind of entry to create. Pass `}<a parentName=\"td\" {...{\n              \"href\": \"folder\"\n            }}>{`folder`}</a>{` to create a new folder. Note that if the type is file then this method just create a file entry object and not the actual file on the disk. The file actually gets created when you call for eg: write method on the file entry object.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.overwrite]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the create attempt can overwrite an existing file`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myNovel = await aFolder.createEntry(\"mynovel.txt\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const catImageCollection = await aFolder.createEntry(\"cats\", {type = types.folder});\n`}</code></pre>\n    <a name=\"module-storage-folder-createfile\" id=\"module-storage-folder-createfile\"></a>\n    <h2 {...{\n      \"id\": \"createfilename-options\"\n    }}>{`createFile(name, options)`}</h2>\n    <p>{`Creates a File Entry object within this folder and returns the appropriate instance.\nNote that this method just create a file entry object and not the actual file on the disk.\nThe file actually gets created when you call for eg: write method on the file entry object.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` - the created file entry  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the name of the file to create.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.overwrite]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the create attempt can overwrite an existing file`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myNovelTxtFile = await aFolder.createFile(\"mynovel.txt\");\n`}</code></pre>\n    <a name=\"module-storage-folder-createfolder\" id=\"module-storage-folder-createfolder\"></a>\n    <h2 {...{\n      \"id\": \"createfoldername\"\n    }}>{`createFolder(name)`}</h2>\n    <p>{`Creates a Folder within this folder and returns the appropriate instance.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{` - the created folder entry object  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the name of the folder to create.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myCollectionsFolder = await aFolder.createFolder(\"collections\");\n`}</code></pre>\n    <a name=\"module-storage-folder-getentry\" id=\"module-storage-folder-getentry\"></a>\n    <h2 {...{\n      \"id\": \"getentryfilepath\"\n    }}>{`getEntry(filePath)`}</h2>\n    <p>{`Gets an entry from within this folder and returns the appropriate instance.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`File`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`Folder`}</inlineCode>{` - the fetched entry.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`filePath`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the name/path of the entry to fetch`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myNovel = await aFolder.getEntry(\"mynovel.txt\");\n`}</code></pre>\n    <a name=\"module-storage-folder-renameentry\" id=\"module-storage-folder-renameentry\"></a>\n    <h2 {...{\n      \"id\": \"renameentryentry-newname-options\"\n    }}>{`renameEntry(entry, newName, options)`}</h2>\n    <p>{`Renames an entry to a new name.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Entry`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the entry to rename`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`newName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the new name to assign`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[options.overwrite]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, renaming can overwrite an existing entry`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong>{`  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await myNovels.rename(myNovel, \"myFantasticNovel.txt\");\n`}</code></pre>\n    <a name=\"module-storage-folder-isfolder\" id=\"module-storage-folder-isfolder\"></a>\n    <h2 {...{\n      \"id\": \"isfolderentry\"\n    }}>{`isFolder(entry)`}</h2>\n    <p>{`Checks if an entry is a folder. Safe to use if entry might be `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`. Useful for type checking.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{` - if `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, the entry is a folder  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the entry to check`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}