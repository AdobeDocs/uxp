(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{"5BQP":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return b}));var n,r=a("wx14"),m=a("zLVn"),d=(a("q1tI"),a("7ljp")),l=a("LHWr"),o=(a("qKvR"),{}),c=(n="JsDocParameters",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(d.mdx)("div",e)}),i={_frontmatter:o},p=l.a;function b(e){var t=e.components,a=Object(m.a)(e,["components"]);return Object(d.mdx)(p,Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)("a",{name:"module-storage-entry",id:"module-storage-entry"}),Object(d.mdx)("h1",{id:"requireuxpstorageentry"},"require('uxp').storage.Entry"),Object(d.mdx)("p",null,"An ",Object(d.mdx)("inlineCode",{parentName:"p"},"Entry")," is the base class for ",Object(d.mdx)("inlineCode",{parentName:"p"},"File")," and ",Object(d.mdx)("inlineCode",{parentName:"p"},"Folder"),". You'll\ntypically never instantiate an ",Object(d.mdx)("inlineCode",{parentName:"p"},"Entry")," directly, but it provides\nthe common fields and methods that both ",Object(d.mdx)("inlineCode",{parentName:"p"},"File")," and ",Object(d.mdx)("inlineCode",{parentName:"p"},"Folder"),"\nshare."),Object(d.mdx)(c,{mdxType:"JsDocParameters"}),Object(d.mdx)("a",{name:"new-module-storage-entry-new",id:"new-module-storage-entry-new"}),Object(d.mdx)("h2",{id:"entryname-provider-id"},"Entry(name, provider, id)"),Object(d.mdx)("p",null,"Creates an instance of Entry."),Object(d.mdx)("table",null,Object(d.mdx)("thead",{parentName:"table"},Object(d.mdx)("tr",{parentName:"thead"},Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"))),Object(d.mdx)("tbody",{parentName:"table"},Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"name"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"*"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"provider"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"*"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"id"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"*"))))),Object(d.mdx)("a",{name:"module-storage-entry-isentry",id:"module-storage-entry-isentry"}),Object(d.mdx)("h2",{id:"isentry--boolean"},"isEntry : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"boolean")),Object(d.mdx)("p",null,"Indicates that this instance is an ",Object(d.mdx)("inlineCode",{parentName:"p"},"Entry"),". Useful for type-checking."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"if (something.isEntry) {\n    return something.getMetadata();\n}\n")),Object(d.mdx)("a",{name:"module-storage-entry-isfile",id:"module-storage-entry-isfile"}),Object(d.mdx)("h2",{id:"isfile--boolean"},"isFile : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"boolean")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nIndicates that this instance is ",Object(d.mdx)("strong",{parentName:"p"},"not")," a ",Object(d.mdx)("inlineCode",{parentName:"p"},"File"),". Useful for type-\nchecking."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (!anEntry.isFile) {\n    return "This entry is not a file.";\n}\n')),Object(d.mdx)("a",{name:"module-storage-entry-isfolder",id:"module-storage-entry-isfolder"}),Object(d.mdx)("h2",{id:"isfolder--boolean"},"isFolder : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"boolean")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nIndicates that this instance is ",Object(d.mdx)("strong",{parentName:"p"},"not")," a folder. Useful for type-\nchecking."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (!anEntry.isFolder) {\n    return "This entry is not a folder.";\n}\n')),Object(d.mdx)("a",{name:"module-storage-entry-name",id:"module-storage-entry-name"}),Object(d.mdx)("h2",{id:"name--string"},"name : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"string")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nThe name of this entry. Read-only."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.name);\n")),Object(d.mdx)("a",{name:"module-storage-entry-provider",id:"module-storage-entry-provider"}),Object(d.mdx)("h2",{id:"provider--filesystemprovider"},"provider : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"FileSystemProvider")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nThe associated provider that services this entry. Read-only."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (entryOne.provider !== entryTwo.provider) {\n    throw new Error("Providers are not the same");\n}\n')),Object(d.mdx)("a",{name:"module-storage-entry-url",id:"module-storage-entry-url"}),Object(d.mdx)("h2",{id:"url--string"},"url : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"string")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nThe url of this entry. You can use this url as input to other entities of the extension system like for eg: set as src attribute of a Image widget in UI. Read-only."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.url);\n")),Object(d.mdx)("a",{name:"module-storage-entry-nativepath",id:"module-storage-entry-nativepath"}),Object(d.mdx)("h2",{id:"nativepath--string"},"nativePath : ",Object(d.mdx)("inlineCode",{parentName:"h2"},"string")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Read only"),"\nThe platform native file-system path of this entry. Read-only"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.nativePath);\n")),Object(d.mdx)("a",{name:"module-storage-entry-tostring",id:"module-storage-entry-tostring"}),Object(d.mdx)("h2",{id:"tostring"},"toString()"),Object(d.mdx)("p",null,"returns the details of the given entry like name, type and native path in a readable string format."),Object(d.mdx)("a",{name:"module-storage-entry-copyto",id:"module-storage-entry-copyto"}),Object(d.mdx)("h2",{id:"copytofolder-options"},"copyTo(folder, options)"),Object(d.mdx)("p",null,"Copies this entry to the specified ",Object(d.mdx)("inlineCode",{parentName:"p"},"folder"),"."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Throws"),":"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"EntryExists")," if the attempt would overwrite an entry and ",Object(d.mdx)("inlineCode",{parentName:"li"},"overwrite")," is ",Object(d.mdx)("inlineCode",{parentName:"li"},"false")),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"PermissionDenied")," if the underlying file system rejects the attempt"),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"OutOfSpace")," if the file system is out of storage space")),Object(d.mdx)("table",null,Object(d.mdx)("thead",{parentName:"table"},Object(d.mdx)("tr",{parentName:"thead"},Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(d.mdx)("tbody",{parentName:"table"},Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"folder"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"Folder")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the folder to which to copy this entry")),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"*")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"false")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"if ",Object(d.mdx)("inlineCode",{parentName:"td"},"true"),", allows overwriting existing entries")))),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.copyTo(someFolder);\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.copyTo(someFolder, {overwrite: true});\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFolder.copyTo(anotherFolder, {overwrite: true});\n")),Object(d.mdx)("a",{name:"module-storage-entry-moveto",id:"module-storage-entry-moveto"}),Object(d.mdx)("h2",{id:"movetofolder-options"},"moveTo(folder, options)"),Object(d.mdx)("p",null,"Moves this entry to the target folder, optionally specifying a new name."),Object(d.mdx)("table",null,Object(d.mdx)("thead",{parentName:"table"},Object(d.mdx)("tr",{parentName:"thead"},Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(d.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(d.mdx)("tbody",{parentName:"table"},Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"folder"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"Folder")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the folder to which to move this entry")),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"*")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"false")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"If ",Object(d.mdx)("inlineCode",{parentName:"td"},"true")," allows the move to overwrite existing files")),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.newName]"),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(d.mdx)("inlineCode",{parentName:"td"},"string")),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(d.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"If specified, the entry is renamed to this name")))),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder);\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {overwrite: true});\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFolder.moveTo(anotherFolder, {overwrite: true});\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {newName: 'masterpiece.txt'})\n")),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {newName: 'novel.txt', {overwrite: true})\n")),Object(d.mdx)("a",{name:"module-storage-entry-delete",id:"module-storage-entry-delete"}),Object(d.mdx)("h2",{id:"delete"},"delete()"),Object(d.mdx)("p",null,"Removes this entry from the file system. If the entry is a folder, all the\ncontents will also be removed."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await aFile.delete();\n")),Object(d.mdx)("a",{name:"module-storage-entry-getmetadata",id:"module-storage-entry-getmetadata"}),Object(d.mdx)("h2",{id:"getmetadata"},"getMetadata()"),Object(d.mdx)("p",null,"Returns this entry's metadata."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(d.mdx)("inlineCode",{parentName:"p"},"Promise.<EntryMetadata>"),Object(d.mdx)("br",{parentName:"p"}),"\n",Object(d.mdx)("strong",{parentName:"p"},"Example"),"  "),Object(d.mdx)("pre",null,Object(d.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const metadata = aFile.getMetadata();\n")))}b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-uxp-reference-js-modules-uxp-persistent-file-storage-entry-md-09145917832bdb061484.js.map